# Generated by Django 2.0 on 2020-03-23 16:48

from django.conf import settings
from django.contrib.auth.models import User
from django.db import migrations, models
import django.db.models.deletion


DEFAULT_ADMIN_PASSWORD = 'na1ades!@#'


def add_meter_info_accesses(apps, schema_editor):
    # get models at this stage
    MeterInfo = apps.get_model("naiades_dashboard", "MeterInfo")
    MeterInfoAccess = apps.get_model("naiades_dashboard", "MeterInfoAccess")

    # for each meter info, add access for that main user
    accesses = []
    for meter_info in MeterInfo.objects.all():
        accesses.append(MeterInfoAccess(
            user=meter_info.user,
            meter_info=meter_info,
            role='VIEWER'
        ))

    # also create admins for schools
    for meter_info in MeterInfo.objects.filter(activity='School'):
        # create admin user
        admin = User.objects.create(
            username=f'{meter_info.user.username}Admin',
            first_name=f'{meter_info.user.first_name} Admin',
            is_staff=True
        )

        # set temp password
        admin.set_password(DEFAULT_ADMIN_PASSWORD)
        admin.save()

        # add user access
        accesses.append(MeterInfoAccess(
            user_id=admin.pk,
            meter_info=meter_info,
            role='ADMIN'
        ))

    # bulk create all accesses
    MeterInfoAccess.objects.bulk_create(accesses)


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('naiades_dashboard', '0003_consumptionsview'),
    ]

    operations = [
        migrations.CreateModel(
            name='MeterInfoAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('VIEWER', 'Viewer')], max_length=16)),
                ('meter_info', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to='naiades_dashboard.MeterInfo')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='accesses', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RunPython(add_meter_info_accesses, reverse_code=lambda _, __: None),
    ]
